---
import data from '../data/site.json';

const { nav } = data;
const navItems = nav.filter(item => item.name !== 'Landing');
---

<nav class='nav-container'>
  <div class='nav-brand'>
    <a href='#landing' class='brand-link'>richard</a>
  </div>

  <ul class='nav-list' role='list'>
    {navItems.map((link) => (
      <li class='nav-item' data-link={link.name.toLowerCase()}>
        <a href={link.link}>{link.name}</a>
      </li>
    ))}
  </ul>

  <button class='mobile-toggle' aria-label='Toggle navigation menu'>
    <span></span>
    <span></span>
    <span></span>
  </button>
</nav>

<script>
  // Mobile menu toggle
  function initMobileMenu() {
    const mobileToggle = document.querySelector('.mobile-toggle') as HTMLButtonElement;
    const navList = document.querySelector('.nav-list') as HTMLElement;
    
    if (!mobileToggle || !navList) return;

    mobileToggle.addEventListener('click', () => {
      mobileToggle.classList.toggle('active');
      navList.classList.toggle('open');
    });

    // Close menu when clicking on nav links
    const navLinks = document.querySelectorAll('.nav-item a');
    navLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileToggle.classList.remove('active');
        navList.classList.remove('open');
      });
    });
  }

  // Smooth scroll and active state
  function initNavigation() {
    const sections = document.querySelectorAll('section') as NodeListOf<HTMLElement>;
    const navItems = document.querySelectorAll('.nav-item') as NodeListOf<HTMLElement>;
    const navLinks = document.querySelectorAll('.nav-item a') as NodeListOf<HTMLAnchorElement>;

    // Smooth scroll
    navLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const target = document.querySelector(link.getAttribute('href') || '');
        if (target) {
          target.scrollIntoView({ behavior: 'smooth' });
        }
      });
    });

    // Active state on scroll
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const id = entry.target.getAttribute('id');
          navItems.forEach(item => {
            item.classList.remove('active');
            if (item.dataset.link === id) {
              item.classList.add('active');
            }
          });
        }
      });
    }, { threshold: 0.5 });

    sections.forEach(section => observer.observe(section));
  }

  // Initialize immediately for mobile menu toggle
  initMobileMenu();
  
  // Initialize navigation features on DOM load (less time-critical)
  document.addEventListener('DOMContentLoaded', () => {
    initNavigation();
  });
</script>

<style lang='scss'>
  .nav-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: var(--color-bg-primary);
    border-bottom: 1px solid var(--color-border);
    backdrop-filter: blur(10px);
    padding: var(--space-4) 0;
  }

  .nav-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: 1200px;
    margin: 0 auto;
    padding-left: var(--space-6);
    padding-right: var(--space-6);
  }

  .nav-brand {
    .brand-link {
      font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
      font-size: var(--font-size-lg);
      font-weight: var(--font-weight-bold);
      color: var(--color-text-primary);
      text-decoration: none;
      transition: color var(--transition-fast);

      &:hover {
        color: var(--color-accent-primary);
      }

      &::after {
        display: none;
      }
    }
  }

  .nav-list {
    display: flex;
    gap: var(--space-8);
    list-style: none;
    margin: 0;
    padding: 0;

    .nav-item {
      a {
        color: var(--color-text-secondary);
        text-decoration: none;
        font-size: var(--font-size-sm);
        font-weight: var(--font-weight-medium);
        padding: var(--space-2) var(--space-4);
        border: 1px solid transparent;
        border-radius: var(--radius-md);
        transition: all var(--transition-fast);
        position: relative;

        &:hover {
          color: var(--color-text-primary);
          background: rgba(83, 22, 156, 0.1); /* Darker Mauve with transparency */
          border: 1px solid var(--color-accent-primary);
        }

        &::after {
          display: none;
        }
      }

      &.active a {
        color: var(--color-text-primary);
        background: rgba(83, 22, 156, 0.1); /* Darker Mauve with transparency */
        border: 1px solid var(--color-accent-primary);
      }
    }
  }

  .mobile-toggle {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--space-2);

    span {
      width: 20px;
      height: 2px;
      background: var(--color-text-primary);
      transition: all var(--transition-fast);
      border-radius: 1px;
    }

    &.active {
      span:nth-child(1) {
        transform: translateY(6px) rotate(45deg);
      }
      
      span:nth-child(2) {
        opacity: 0;
      }
      
      span:nth-child(3) {
        transform: translateY(-6px) rotate(-45deg);
      }
    }
  }

  @media (max-width: 768px) {
    .nav-list {
      position: fixed;
      top: 70px;
      right: 0;
      width: 250px;
      height: calc(100vh - 70px);
      background: var(--color-bg-secondary);
      border-left: 1px solid var(--color-border);
      flex-direction: column;
      gap: var(--space-2);
      padding: var(--space-6);
      transform: translateX(100%);
      transition: transform var(--transition-fast);

      &.open {
        transform: translateX(0);
      }

      .nav-item a {
        display: block;
        width: 100%;
        text-align: center;
        padding: var(--space-4);
        font-size: var(--font-size-base);
      }
    }

    .mobile-toggle {
      display: flex;
    }
  }
</style>
