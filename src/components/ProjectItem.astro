---
import SkillIcon from './SkillIcon.astro';

interface Props {
  item: {
    title: string;
    description: string;
    image: string;
    url: string;
    github?: string;
    tech: {
      icon: string;
      colored: boolean;
    }[];
  };
}

const { item } = Astro.props;
---

<div class='project-card'>
  <div class='project-image'>
    <a href={item.url} target='_blank' class='mobile-project-link'>
      <img src={item.image} alt={`${item.title} project screenshot`} />
    </a>
    <div class='project-overlay'>
      <div class='project-links'>
        <a href={item.url} target='_blank' class='project-link' aria-label='View project'>
          <svg width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2'>
            <path d='M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6M15 3h6v6M10 14L21 3'/>
          </svg>
        </a>
        {item.github && (
          <a href={item.github} target='_blank' class='project-link' aria-label='View on GitHub'>
            <svg width='16' height='16' viewBox='0 0 24 24' fill='currentColor'>
              <path d='M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z'/>
            </svg>
          </a>
        )}
      </div>
    </div>
  </div>
  
  <div class='project-content'>
    <div class='project-info'>
      <h3 class='project-title'>{item.title}</h3>
      <p class='project-description'>{item.description}</p>
    </div>
    
    <div class='project-tech'>
      {item.tech.map((tech) => (
        <div class='tech-tag'>
          {tech.name}
        </div>
      ))}
    </div>
    
    <div class='project-actions'>
      <a href={item.url} target='_blank' class='project-action-link'>
        <svg width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2'>
          <path d='M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6M15 3h6v6M10 14L21 3'/>
        </svg>
        <span>View Project</span>
      </a>
      
      {item.github && (
        <a href={item.github} target='_blank' class='project-action-link'>
          <svg width='16' height='16' viewBox='0 0 24 24' fill='currentColor'>
            <path d='M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z'/>
          </svg>
          <span>GitHub</span>
        </a>
      )}
    </div>
  </div>
</div>

<style lang='scss'>
  .project-card {
    background: var(--color-bg-card);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    overflow: hidden;
    transition: all var(--transition-normal);
    display: flex;
    flex-direction: row;

    &:hover {
      border-color: var(--color-accent-primary);
      transform: translateY(-4px);
      box-shadow: 0 10px 25px rgba(83, 22, 156, 0.2); /* Darker Mauve shadow */
    }
    
    @media (max-width: 768px) {
      flex-direction: column;
    }
  }

  .project-image {
    position: relative;
    overflow: hidden;
    flex: 0 0 40%;
    
    @media (max-width: 768px) {
      flex: 0 0 auto;
      aspect-ratio: 16 / 9;
    }

    .mobile-project-link {
      display: block;
      height: 100%;
      width: 100%;
      text-decoration: none;
      
      @media (min-width: 769px) {
        pointer-events: none;
      }
      
      &::after {
        display: none;
      }
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform var(--transition-slow);
    }

    .project-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(30, 30, 46, 0.8);
      opacity: 0;
      transition: opacity var(--transition-normal);
      display: flex;
      align-items: center;
      justify-content: center;
      
      @media (max-width: 768px) {
        display: none;
      }
    }

    .project-links {
      display: flex;
      gap: var(--space-3);
    }

    .project-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: var(--color-bg-primary);
      border: 1px solid var(--color-border);
      border-radius: var(--radius-lg);
      color: var(--color-text-primary);
      text-decoration: none;
      transition: all var(--transition-fast);

      &:hover {
        background: var(--color-accent-primary);
        border-color: var(--color-accent-primary);
        transform: scale(1.1);
        box-shadow: 0 0 8px rgba(83, 22, 156, 0.5); /* Darker Mauve glow */
      }

      &::after {
        display: none;
      }
    }

    @media (min-width: 769px) {
      &:hover {
        .project-overlay {
          opacity: 1;
        }
  
        img {
          transform: scale(1.05);
        }
      }
    }
    
    @media (max-width: 768px) {
      img {
        transform: scale(1.01);
      }
    }
  }

  .project-content {
    padding: var(--space-6);
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: var(--space-6);
  }

  .project-info {
    
  }
  
  .project-actions {
    display: flex;
    gap: var(--space-3);
    flex-wrap: wrap;
    
    @media (min-width: 769px) {
      display: none;
    }
  }
  
  .project-action-link {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-4);
    border-radius: var(--radius-lg);
    background: var(--color-bg-tertiary);
    border: 1px solid var(--color-border);
    color: var(--color-text-secondary);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    transition: all var(--transition-fast);
    text-decoration: none;
    
    &:hover {
      background: rgba(83, 22, 156, 0.1); /* Darker Mauve with transparency */
      border-color: var(--color-accent-primary);
        color: var(--color-text-primary);
      transform: translateY(-1px);
    }
    
    &::after {
      display: none;
    }
    
    svg {
      flex-shrink: 0;
    }
  }

  .project-title {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-primary);
    margin-bottom: var(--space-3);
  }

  .project-description {
    color: var(--color-text-secondary);
    font-size: var(--font-size-sm);
    line-height: 1.6;
    margin-bottom: 0;
  }

  .project-tech {
    display: flex;
    gap: var(--space-2);
    flex-wrap: wrap;

    .tech-tag {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: var(--space-1) var(--space-3);
      background: var(--color-bg-tertiary);
      color: var(--color-text-secondary);
      font-size: var(--font-size-xs);
      font-weight: var(--font-weight-medium);
      border: 1px solid var(--color-border);
      border-radius: var(--radius-lg);
      transition: all var(--transition-fast);
      cursor: default;

      &:hover {
        background: rgba(83, 22, 156, 0.1); /* Darker Mauve with transparency */
        border-color: var(--color-accent-primary);
      color: var(--color-text-primary);
        transform: translateY(-1px);
      }
    }
  }
</style>
